{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "BlueTango Api"
    },
    "basePath": "/api/v1",
    "schemes": [
        "https",
        "http"
    ],
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded",
        "multipart/form-data"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Admin",
            "description": "Admin related api's"
        },
        {
            "name": "Employee",
            "description": "Employee related api's"
        },
        {
            "name": "EmployeeAttributes",
            "description": "Employee Attribute related api's"
        },
        {
            "name": "EmployeeChat",
            "description": "Employee Chat related api's"
        },
        {
            "name": "EmployeeAchievement",
            "description": "Employee Achievement related api's"
        },
        {
            "name": "Employer",
            "description": "Employer related api's"
        },
        {
            "name": "Coach",
            "description": "Coach related api's"
        },
        {
            "name": "CoachChat",
            "description": "Coach Chat related api's"
        },
        {
            "name": "Web",
            "description": "Web related api's"
        },
        {
            "name": "Bluetango Admin",
            "description": "Bluetango admin related api's"
        }
    ],
    "paths": {
        "/admin/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Admin Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addSubAdmin": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Admin Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "admin name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confirmPassword",
                        "in": "formData",
                        "description": "confirmPassword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "phone number",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "permissions",
                        "in": "formData",
                        "description": "ex- {employee, coach}",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/editSubAdmin": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "edit subAdmin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subAdminId",
                        "in": "formData",
                        "description": "subAdmin id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "admin name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "phone number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissions",
                        "in": "formData",
                        "description": "ex- {employee, coach}",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "1--> active/ 2--> delete",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/admin/forgotPassword": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Admin forget password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/resetPassword": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Admin reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "otp",
                        "in": "formData",
                        "description": "forget pass otp",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confirmPassword",
                        "in": "formData",
                        "description": "confirmPassword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/logout": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get admin logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addEditEmployers": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get admin logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "id, when you will pass id then it will be update otherwise it will be create",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "phone number",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "industry_type",
                        "in": "formData",
                        "description": "industry type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contact_name",
                        "in": "formData",
                        "description": "contact_name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getIndustryTypeList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get employer industry type list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getEmployersList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get admin logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "industry_type",
                        "in": "query",
                        "description": "industry type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isPagination",
                        "in": "query",
                        "description": "true/ false",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/employerDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get employer details by id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerId",
                        "in": "query",
                        "description": "employer id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/changeEmployerStatus": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to change employer status",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employerId",
                        "in": "query",
                        "description": "employer id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "actionType",
                        "in": "query",
                        "description": "activate/deactivate/delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/dashboardAnalytics": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get dashboard analytics",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "ISO string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "ISO String",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getEmployeeList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get admin logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employerName",
                        "in": "query",
                        "description": "filter employee list by employer name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentName",
                        "in": "query",
                        "description": "filter employee list by department name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeRankName",
                        "in": "query",
                        "description": "filter employee list by employee rank name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getDepartmentList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get department list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/employeeDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get employee details by id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/changeEmployeeStatus": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to change employee status",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "actionType",
                        "in": "query",
                        "description": "activate/deactivate/delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/editEmployeeDetails": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to edit employee details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "employee name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "employee email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "employee phone",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employerId",
                        "in": "formData",
                        "description": "employer id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "departmentId",
                        "in": "formData",
                        "description": "department id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "employeeRankId",
                        "in": "formData",
                        "description": "employee rank id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "0=>inactive,1=>active,2=>deleted",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addSubscriptionPlan": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "api to add the subscription plan",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "plan_name",
                        "in": "formData",
                        "description": "plan name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "charge",
                        "in": "formData",
                        "description": "charge",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "in days",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/updateSubscriptionPlan": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "api to update the subscription plan",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "plan id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "plan_name",
                        "in": "formData",
                        "description": "plan name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "charge",
                        "in": "formData",
                        "description": "charge",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "in days",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "0=>inactive,1=>active",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/admin/viewSubscriptionPlan": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view the subscription plan",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "0=>inactive,1=>active",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/subscriptionDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get subscription plan details by id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "description": "subscription plan id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/changeSubsPlanStatus": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to change subscription plan status",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "description": "subscription id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "actionType",
                        "in": "query",
                        "description": "activate/deactivate/delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/viewPaymentList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view the payment list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/viewPaymentDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view the payment details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "payment id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/exportCsv": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to export csv filr",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addEditCoach": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to add/edit coach",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. When you will pass id then it will be update otherwise it will be create\n2. Required Fields are:\n\tname,\n\temail,\n\tcountry_code,\n\tphone_number,\n\tdescription, and coach_charge is required\n3. Multiple coach specialization category ids can be added in coach_specialization_category_ids array like: prev_employers:[1,2,3,...]\n4. Multiple employee rank ids can be added in employee_rank_ids array like: prev_employers:[1,2,3,...]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "string"
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "coach_specialization_category_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "employee_rank_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "coach_charge": {
                                    "type": "number"
                                },
                                "social_media_handles": {
                                    "type": "object",
                                    "properties": {
                                        "facebook": {
                                            "type": "string"
                                        },
                                        "twitter": {
                                            "type": "string"
                                        },
                                        "linkedin": {
                                            "type": "string"
                                        },
                                        "instagram": {
                                            "type": "string"
                                        },
                                        "google": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "website": {
                                    "type": "string"
                                },
                                "document_url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getCoachList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view the coach list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coach_specialization_category_id",
                        "in": "query",
                        "description": "coach specialization category id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "employee_rank_id",
                        "in": "query",
                        "description": "employee rank id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "coach rating: 1,2,3,4,5",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getCoachDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to get coach details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coachId",
                        "in": "query",
                        "description": "coach id",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/deleteCoach": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "api to delete coach",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coachId",
                        "in": "query",
                        "description": "coach id",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getContactUsList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to get contactUs list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getContactUsDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to get contactUs list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "constactId",
                        "in": "query",
                        "description": "contact id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/sendEmailAndNotification": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "api to send email and notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiver",
                        "in": "formData",
                        "description": "employer/employee",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "employer",
                            "employee"
                        ]
                    },
                    {
                        "name": "notification_type",
                        "in": "formData",
                        "description": "0->email/1->notification/2->both",
                        "required": true,
                        "type": "number",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "message",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/subAdminList": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view subAdmin payment list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/subAdminDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "api to view subAdmin details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subAdminId",
                        "in": "query",
                        "description": "subAdmin id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/uploadFile": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "upload media files for admin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addVideo": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to add video library",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "video",
                        "in": "formData",
                        "description": "video url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/editVideo": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to edit video library",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "library id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "video",
                        "in": "formData",
                        "description": "video url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "1--> active/ 2--> delete",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listVideo": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list video library",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/detailsVideo": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get detail video library",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "library id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addArticle": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to add video article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/updateArticle": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to update article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "article id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/deleteArticle": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to delete article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "article id in array ex- [1,2]",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listArticle": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/detailsArticle": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "article id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addAdvisor": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to add video article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/updateAdvisor": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to update advisor",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "advisor id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/deleteAdvisor": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to edit article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "article id in array ex- []",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listAdvisor": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list article/news",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/detailsAdvisor": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get details of advisor",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "advisor id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listFeedback": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list Feedback",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "feedbackType",
                        "in": "query",
                        "description": "feedback type: 1=>employee, 2=>employer, 3=>coach, 4=> other",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "searchKey",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getFeedbackDetails": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get Feedback Details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "feedback_id",
                        "in": "query",
                        "description": "feedback id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addEditCoachSpecializationCategories": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to addEdit Coach Specialization Categories",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "formData",
                        "description": "id, when you will pass id then it will be update otherwise it will be create",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "enter coach category specialization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "enter coach category specialization description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listCoachSpecializationCategories": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list Coach Specialization Categories",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "is_pagination: 0=> no, 1=> yes",
                        "required": false,
                        "type": "number",
                        "default": 1,
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getCoachSpecializationCategory": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get Coach Specialization Category",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "enter the category id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/deleteCoachSpecializationCategory": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to delete Coach Specialization Category",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "formData",
                        "description": "enter the category id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/addEditEmployeeRank": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to addEdit Employee Rank",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank_id",
                        "in": "formData",
                        "description": "id, when you will pass id then it will be update otherwise it will be create",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "enter Employee Rank name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "enter Employee Rank description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listEmployeeRanks": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list Employee Ranks",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "is_pagination: 0=> no, 1=> yes",
                        "required": false,
                        "type": "number",
                        "default": 1,
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getEmployeeRank": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get Employee Rank",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank_id",
                        "in": "query",
                        "description": "enter rank id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/deleteEmployeeRank": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to delete Employee Rank",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank_id",
                        "in": "formData",
                        "description": "enter the rank id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/listEmployeeCoachSessions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to list Employee Coach Sessions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "enter the date: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status: 1=>pending, 2=>accepted, 3=>rejected, 4=> cancelled, 5=>completed",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "employeeRankId",
                        "in": "query",
                        "description": "employee Rank Id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "sessionType",
                        "in": "query",
                        "description": "sessionType: 1=>free, 2=>paid",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "employer_ids",
                        "in": "query",
                        "description": "employer_ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/getEmployeeCoachSession": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to get Employee Coach Session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/login": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "formData",
                        "description": "device_token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/forgotPassword": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee forgot password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_role",
                        "in": "formData",
                        "description": " super_admin=> 1, sub_admin=> 2, employee=> 3,employer=> 4,coach=> 5",
                        "required": true,
                        "type": "number",
                        "enum": [
                            5
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/resetPassword": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/employeeResetPassword": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter only employee jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getMyProfile": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getListOfTeamMemberByManagerId": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "list of employee by manager id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getEmployeeCountGroupByEnergy": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "get Employee Count Group By Energy",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewDetailsEmployee": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "get profile of employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/searchTeamMember": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Search team members",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "search_string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/uploadFile": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "folderName",
                        "in": "formData",
                        "description": "folderName",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "employee_profile_pic",
                            "employer_profile_pic",
                            "admin_profile_pic",
                            "coach_profile_pic",
                            "other"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/updateProfile": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee update profile",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. date_of_birth formate must be YYYY-MM-DD\n2. Multiple previous employers can be added in prev_employers array like: prev_employers:[{},{},{},{}]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "date_of_birth": {
                                    "type": "string"
                                },
                                "accomplishments": {
                                    "type": "string"
                                },
                                "profile_pic_url": {
                                    "type": "string"
                                },
                                "prev_employers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "prev_employer": {
                                                "type": "string"
                                            },
                                            "prev_department": {
                                                "type": "string"
                                            },
                                            "prev_designation": {
                                                "type": "string"
                                            },
                                            "prev_date_of_joining": {
                                                "type": "string"
                                            },
                                            "prev_exit": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employee/addGoal": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Add goal",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_details",
                        "in": "formData",
                        "description": "goal_details change all single quotes to double quotes and give perfect json, This API will work postman not swagger [{'title':'abc', 'description':'test test', 'start_date':'2020-10-02 13:02:02', 'end_date':'2020-10-02 13:02:02','select_measure':'1/2'(1=>Amount, 2=> Quantity),'enter_measure':'10', 'employee_ids':[1,2,3,4]},{}]",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employee/editGoal": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "edit goal",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "formData",
                        "description": "start_date: YYYY-MM-DD HH:MM:SS",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "formData",
                        "description": "end_date: YYYY-MM-DD HH:MM:SS",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "select_measure",
                        "in": "formData",
                        "description": "select_measure, 1=>Amount, 2=> Quantity",
                        "required": true,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "enter_measure",
                        "in": "formData",
                        "description": "enter_measure",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_ids",
                        "in": "formData",
                        "description": "employee_ids",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewGoalAsManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view goal as manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "search_string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewGoalDetailsAsManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view goal as manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "query",
                        "description": "goal_id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewGoalAssignCompletionAsManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view Goal Assign Completion As Manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "query",
                        "description": "goal_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "team_goal_assign_id",
                        "in": "query",
                        "description": "team_goal_assign_id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/deleteGoal": {
            "delete": {
                "tags": [
                    "Employee"
                ],
                "description": "delete goal",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getGoalCompletedRequestAsManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "get goal complete request as manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/goalAcceptRejectAsManager": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "goal accept reject as manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "formData",
                        "description": "goal_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "team_goal_assign_id",
                        "in": "formData",
                        "description": "team_goal_assign_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "team_goal_assign_completion_by_employee_id",
                        "in": "formData",
                        "description": "team_goal_assign_completion_by_employee_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "manager_comment",
                        "in": "formData",
                        "description": "manager comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "status, approve=>1, rejected=> 2",
                        "required": true,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/submitGoalAsEmployee": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "goal submit by employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "formData",
                        "description": "goal_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "team_goal_assign_id",
                        "in": "formData",
                        "description": "team_goal_assign_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "complete_measure",
                        "in": "formData",
                        "description": "complete_measure",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewGoalAsEmployee": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view goal as employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getQuantitativeMeasurementCommentList": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "get quantitative measurement list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/addQualitativeMeasurement": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "goal submit by employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "formData",
                        "description": "employee_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "initiative",
                        "in": "formData",
                        "description": "initiative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "initiative_desc",
                        "in": "formData",
                        "description": "initiative_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ability_to_delegate",
                        "in": "formData",
                        "description": "ability_to_delegate",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "ability_to_delegate_desc",
                        "in": "formData",
                        "description": "ability_to_delegate_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "clear_Communication",
                        "in": "formData",
                        "description": "clear_Communication",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "clear_Communication_desc",
                        "in": "formData",
                        "description": "clear_Communication_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "self_awareness_of_strengths_and_weaknesses",
                        "in": "formData",
                        "description": "self_awareness_of_strengths_and_weaknesses",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "self_awareness_of_strengths_and_weaknesses_desc",
                        "in": "formData",
                        "description": "self_awareness_of_strengths_and_weaknesses_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "agile_thinking",
                        "in": "formData",
                        "description": "agile_thinking",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agile_thinking_desc",
                        "in": "formData",
                        "description": "agile_thinking_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "influence",
                        "in": "formData",
                        "description": "influence",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "influence_desc",
                        "in": "formData",
                        "description": "influence_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "empathy",
                        "in": "formData",
                        "description": "empathy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "empathy_desc",
                        "in": "formData",
                        "description": "empathy_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "leadership_courage",
                        "in": "formData",
                        "description": "leadership_courage",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "leadership_courage_desc",
                        "in": "formData",
                        "description": "leadership_courage_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customer_client_patient_satisfaction",
                        "in": "formData",
                        "description": "customer_client_patient_satisfaction",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "customer_client_patient_satisfaction_desc",
                        "in": "formData",
                        "description": "customer_client_patient_satisfaction_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "team_contributions",
                        "in": "formData",
                        "description": "team_contributions",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "team_contributions_desc",
                        "in": "formData",
                        "description": "team_contributions_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "time_management",
                        "in": "formData",
                        "description": "time_management",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "time_management_desc",
                        "in": "formData",
                        "description": "initiative_desc",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_product",
                        "in": "formData",
                        "description": "work_product",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "work_product_desc",
                        "in": "formData",
                        "description": "work_product_desc",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/changePassword": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee change password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "old_password",
                        "in": "formData",
                        "description": "old_password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "new_password",
                        "in": "formData",
                        "description": "new_password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/updateEnergyCheck": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee change password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "energy_id",
                        "in": "formData",
                        "description": "energy_id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/thoughtOfTheDay": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "thought of the day",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "thought_of_the_day",
                        "in": "formData",
                        "description": "thought_of_the_day",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getEmoji": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Employee get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewEnergyCheckTeamMembers": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view energy check",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/feelAboutJobToday": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "feel about job today",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "job_emoji_id",
                        "in": "formData",
                        "description": "job_emoji_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "job_comments",
                        "in": "formData",
                        "description": "job_comments",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/updateEmployeeDeviceToken": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to update employee device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "formData",
                        "description": "enter device token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/clearEmployeeDeviceToken": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to clear employee device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getCurrentManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get current manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getEmployeeDetails": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get employee details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewEmployeeEnergy": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get employee energy",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewThoughtOfTheDay": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get thought of the day  of employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewFeelAboutJobToday": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to view Feel About Job Today of employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewThoughtOfTheDayFromAdmin": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to view Thought Of The Day From Admin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getQuantitativeStatsOfGoals": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to to get Quantitative Stats of goals",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getQuantitativeStatsOfGoalsAsManager/{employee_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to to get Quantitative Stats of goals as manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getQualitativeMeasurement": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view goal as employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "employee_id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getQualitativeMeasurementDetails": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to get qualitative measurement details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "initiative",
                            "ability_to_delegate",
                            "clear_Communication",
                            "self_awareness_of_strengths_and_weaknesses",
                            "agile_thinking",
                            "influence",
                            "empathy",
                            "leadership_courage",
                            "customer_client_patient_satisfaction",
                            "team_contributions",
                            "time_management",
                            "work_product"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getCoachSpecializationCategoryList": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get Coach Specialization Category List",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getCoachList": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to get coach list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Enter search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coach_specialization_category_id",
                        "in": "query",
                        "description": "Enter search key",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": " Default is 3. Options are:\n\t1=>newly_added_on_top,\n\t2=>old_on_top,\n\t3=>rating_high_to_low,\n\t4=>cost_high_to_low,\n\t5=>cost_low_to_high,\n\t6=>sooner_availability_on_top",
                        "required": false,
                        "type": "number",
                        "default": 3,
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ]
                    },
                    {
                        "name": "filterBy",
                        "in": "query",
                        "description": " Default is 2. Options are:\n\t1=>week,\n\t2=>today,\n\t3=>custom_date",
                        "required": false,
                        "type": "number",
                        "default": 2,
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Enter date:\n\tstart date if filterBy is 1\n\tOR Date of today if filterBy is 2\n\tOR custom date if filter by is 3)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getSlots": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get slots",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coach_id",
                        "in": "query",
                        "description": "Enter coach id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "filter_key",
                        "in": "query",
                        "description": "filter_key",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Daily",
                            "Weekly",
                            "Monthly",
                            "Yearly"
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Enter date format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "day",
                        "in": "query",
                        "description": "Enter day",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "13",
                            "14",
                            "15",
                            "16",
                            "17",
                            "18",
                            "19",
                            "20",
                            "21",
                            "22",
                            "23",
                            "24",
                            "25",
                            "26",
                            "27",
                            "28",
                            "29",
                            "30",
                            "31"
                        ]
                    },
                    {
                        "name": "week",
                        "in": "query",
                        "description": "Enter week",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "13",
                            "14",
                            "15",
                            "16",
                            "17",
                            "18",
                            "19",
                            "20",
                            "21",
                            "22",
                            "23",
                            "24",
                            "25",
                            "26",
                            "27",
                            "28",
                            "29",
                            "30",
                            "31",
                            "32",
                            "33",
                            "34",
                            "35",
                            "36",
                            "37",
                            "38",
                            "39",
                            "40",
                            "41",
                            "42",
                            "43",
                            "44",
                            "45",
                            "46",
                            "47",
                            "48",
                            "49",
                            "50",
                            "51",
                            "52"
                        ]
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Enter month",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12"
                        ]
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Enter year",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "2020",
                            "2021",
                            "2023",
                            "2024",
                            "2025",
                            "2026",
                            "2027",
                            "2028",
                            "2029",
                            "2030"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getSlot": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get slot",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slot_id",
                        "in": "query",
                        "description": "slot id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/createSessionRequest": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "api to create Session Request",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slot_id",
                        "in": "formData",
                        "description": "slot id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "query",
                        "in": "formData",
                        "description": "enter query description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "app_id",
                        "in": "formData",
                        "description": "app_id: 1=>BX, 2=>BT",
                        "required": true,
                        "type": "number",
                        "enum": [1, 2]
                    },
                    {
                        "name": "coach_specialization_category_id",
                        "in": "formData",
                        "description": "enter coach specialization category id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "date",
                        "in": "formData",
                        "description": "date format: YYYY-DD-MM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time",
                        "in": "formData",
                        "description": "start_time format: HH:mm:ss",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_time",
                        "in": "formData",
                        "description": "end_time format: HH:mm:ss",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getSessions": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to get Sessions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/cancelSession": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "to cancel Session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "cancel_reason",
                        "in": "formData",
                        "description": "enter cancel reason",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "formData",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getNotRatedSessions": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to get Not Rated Sessions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/listSessionHistory": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to list Session History",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getSessionHistoryDetails/{session_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "to get Session History Details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/rateCoachSession": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "to rate Coach Session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rating",
                        "in": "formData",
                        "description": "enter rating",
                        "required": true,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "enter comment",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/skipRateSession": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "to skip Rate Session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/viewGoalDetailsAsEmployee": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "view goal as employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "query",
                        "description": "goal_id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/contactUs": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "api to contact with admin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "enter your message",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getNotifications": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get notifiactions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getUnseenNotificationCount": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get Unseen Notification Count",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/markNotificationsAsViewed": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get notifiactions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "achievement",
                            "achievement_post_only",
                            "chat",
                            "chat_message_only",
                            "goal",
                            "rating"
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "chat room id (required only in case of chat_message_only type)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/referFriend": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "api to refer Friend",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "phone",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/feedback": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "api to employee feedback",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rating",
                        "in": "formData",
                        "description": "rating (1 to 5)",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/listVideo": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to list video library",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getGoalCompletionAverageAsManager": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get Goal Completion Average for Manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal_id",
                        "in": "query",
                        "description": "goal_id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/shareEmployeeCV": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to share Employee CV",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "to_email",
                        "in": "formData",
                        "description": "Enter receiver's email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "formData",
                        "description": "Enter subject of email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Enter message of email",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getEmployeeCV": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get Employee CV",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getGoalSubmitReminders": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "api to get Goal Submit Reminders",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/toggleGoalAsPrimary": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to toggle Goal As Primary",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "team_goal_assign_id",
                        "in": "formData",
                        "description": "Enter team goal assign id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/markGoalsAsPrimary": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to mark Goal As Primary",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Enter goals array: [{team_goal_assign_id:number,is_primary:number //0=>no, 1=>yes },]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "goals": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "team_goal_assign_id": {
                                                "type": "number"
                                            },
                                            "is_primary": {
                                                "description": "0=> no, 1=> yes",
                                                "type": "number",
                                                "enum": [
                                                    0,
                                                    1
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAttributeList": {
            "get": {
                "tags": [
                    "EmployeeAttributes"
                ],
                "description": "Api to all Attributes",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAttribute/{attribute_id}": {
            "get": {
                "tags": [
                    "EmployeeAttributes"
                ],
                "description": "Api to get an attribute by id",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attribute_id",
                        "in": "path",
                        "description": "Enter attribute id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/addAttributeRatings": {
            "post": {
                "tags": [
                    "EmployeeAttributes"
                ],
                "description": "Api to add Attribute Ratings",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Enter ratings array: [{attribute_id:number,name:string,rating:number //1,2,3,4,5, desc:string },]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "employee_id": {
                                    "type": "number"
                                },
                                "ratings": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attribute_id": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "rating": {
                                                "type": "number",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5
                                                ]
                                            },
                                            "desc": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAttributeRatings": {
            "get": {
                "tags": [
                    "EmployeeAttributes"
                ],
                "description": "Api to get Attribute Ratings",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Enter employee id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAchievements": {
            "get": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "get achievements of the employees",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAchievementById/{achievement_id}": {
            "get": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "get achievement by id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "path",
                        "description": "achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/createUpdateAchievement": {
            "post": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to create achivement",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "formData",
                        "description": "Enter achievement id, when you will pass achievement id then it will be update otherwise it will be create",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Enter description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/likeDislikeAchievement": {
            "put": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to like achivement",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "formData",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/highFiveAchievement": {
            "put": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to high five achivement",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "formData",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/addEditCommentAchievement": {
            "post": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to add edit comment achivement",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "formData",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "achievement_comment_id",
                        "in": "formData",
                        "description": "Enter achievement comment id, when you will pass achievement comment id then it will be update otherwise it will be create",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Enter comment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAchievementComments/{achievement_id}": {
            "get": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to get achivement comments",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "path",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/deleteAchievement/{achievement_id}": {
            "delete": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to delete an achievement",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "path",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/deleteAchievementComment/{achievement_comment_id}": {
            "delete": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to delete an achievement comment",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_comment_id",
                        "in": "path",
                        "description": "Enter achievement comment id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAchievementLikesList/{achievement_id}": {
            "get": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to get achievement likes list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "path",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getAchievementHighFivesList/{achievement_id}": {
            "get": {
                "tags": [
                    "EmployeeAchievement"
                ],
                "description": "api to get achievement high-fives list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "achievement_id",
                        "in": "path",
                        "description": "Enter achievement id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getChatPopUpListAsEmployee": {
            "get": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "get chat popup list as employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getChatRoomId": {
            "get": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "get chat room id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "other_user_id",
                        "in": "query",
                        "description": "other_user_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "0=> employee, 1=> coach, 2=> group",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getChatList": {
            "get": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "get chat list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/createChatSession": {
            "post": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "create chat session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/dropChatSession": {
            "delete": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "drop chat session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/checkChatSession/{chat_room_id}": {
            "get": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "check chat session exist or not",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "path",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getChatSessionIdandToken/{chat_room_id}": {
            "get": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "get video chat session id and token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "path",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/sendChatNotification": {
            "post": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "send chat notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_type",
                        "in": "formData",
                        "description": "text | audio | video",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "text",
                            "audio",
                            "video"
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "Enter chat session id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "Enter chat token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Enter message in case of text chat",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/sendChatDisconnectNotification": {
            "post": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "send chat disconnect notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_type",
                        "in": "formData",
                        "description": "audio | video",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "audio",
                            "video"
                        ]
                    },
                    {
                        "name": "disconnect_type",
                        "in": "formData",
                        "description": "1=> disconnected | 2=>missed",
                        "required": false,
                        "type": "string",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "Enter chat session id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "Enter chat token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/clearChat": {
            "delete": {
                "tags": [
                    "EmployeeChat"
                ],
                "description": "clear chat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/login": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/addEditEmployee": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to add a employee",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. When you will pass id then it will be update otherwise it will be create\n2. Date formate must be YYYY-MM-DD\n3. is_manager value can be: 0=> false, 1=>true\n4. Required Fields are:\n\tfirst_name,last_name\n\temail,\n\tcountry_code,\n\tphone_number,\n\tcurrent_department_id,\n\tcurrent_date_of_joining,\n\tis_manager\n5.  If is_manager==1 then manager_team_name and manager_team_icon_url is required\n6. Multiple previous employers can be added in prev_employers array like: prev_employers:[{},{},{},{}]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "manager_id": {
                                    "type": "number"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "current_department_id": {
                                    "type": "string"
                                },
                                "current_designation": {
                                    "type": "string"
                                },
                                "current_date_of_joining": {
                                    "type": "string"
                                },
                                "is_manager": {
                                    "type": "number"
                                },
                                "manager_team_name": {
                                    "type": "string"
                                },
                                "manager_team_icon_url": {
                                    "type": "string"
                                },
                                "employee_rank_id": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getDepartmentList": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to get Department list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getEmployeeRankList": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to get Employee Rank List",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getManagerList": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to get manager list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "description": "department id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getEmployeeList": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to get employee list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "department type id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "employeeRankId",
                        "in": "query",
                        "description": "employee Rank Id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "searchKey",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/resetPassword": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/forgotPassword": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer forgot password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_role",
                        "in": "formData",
                        "description": " super_admin=> 1, sub_admin=> 2, employee=> 3,employer=> 4,coach=> 5",
                        "required": true,
                        "type": "number",
                        "enum": [
                            4
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employer/changePassword": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer change password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "old_password",
                        "in": "formData",
                        "description": "old_password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "new_password",
                        "in": "formData",
                        "description": "new_password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/updateEmployerDeviceToken": {
            "put": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to update employer device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "formData",
                        "description": "enter device token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/clearEmployerDeviceToken": {
            "put": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to clear employer device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getProfile": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "api to get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/editProfile": {
            "put": {
                "tags": [
                    "Employer"
                ],
                "description": "api to edit profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "phone number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "industry_type",
                        "in": "formData",
                        "description": "industry_type",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "description": "address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thought_of_the_day",
                        "in": "formData",
                        "description": "thought_of_the_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profile_pic_url",
                        "in": "formData",
                        "description": "profile_pic_url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getSubscriptionPlanList": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to get Subscription Plan List",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/buyPlan": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to buy plan",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "plan_id",
                        "in": "formData",
                        "description": "plan id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "purchase_date",
                        "in": "formData",
                        "description": "purchase date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date",
                        "in": "formData",
                        "description": "expiry date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "description": "amount",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "transaction_id",
                        "in": "formData",
                        "description": "transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/viewEmployeeDetails/{employee_id}": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to view Employer Details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/deleteEmployee/{employee_id}": {
            "delete": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to delete Employee ",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "employee id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/updateManager": {
            "put": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to update Employee manager",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "current_manager_id",
                        "in": "formData",
                        "description": "current manager id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "new_manager_id",
                        "in": "formData",
                        "description": "current manager id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/mySubscription": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to view Current Plan Details ",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/cancelPlan": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to cancel Current Plan ",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscription_id",
                        "in": "formData",
                        "description": "subscription id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/myPayments": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Api to view all payments of a employer ",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/contactUs": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "api to contact with admin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "enter your message",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getNotifications": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "api to get notifiactions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getUnseenNotificationCount": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "api to get Unseen Notification Count",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/uploadFile": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer upload file",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "folderName",
                        "in": "formData",
                        "description": "folderName",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "employee_profile_pic",
                            "employer_profile_pic",
                            "admin_profile_pic",
                            "coach_profile_pic",
                            "other"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/employer/payment": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer payment",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "description": "amount",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getBraintreeClientToken": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer get Braintree Client Token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/startFreeTrial": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to start Free Trial",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/addAttributes": {
            "post": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to add Edit Attributes",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Enter attributes array: [{name:string,desc:string },]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "desc": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getAttributes": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to get Attributes",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/getAttributeDetails/{attribute_id}": {
            "get": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to get Attribute details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attribute_id",
                        "in": "path",
                        "description": "Enter attribute id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/deleteAttribute/{attribute_id}": {
            "delete": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to delete Attribute",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attribute_id",
                        "in": "path",
                        "description": "Enter attribute id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/employer/toggleAttributeStatus/{attribute_id}": {
            "put": {
                "tags": [
                    "Employer"
                ],
                "description": "Employer to toggle Attribute Status",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attribute_id",
                        "in": "path",
                        "description": "Enter attribute id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/login": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "Coach Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "formData",
                        "description": "device_token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "app_id",
                        "in": "formData",
                        "description": "app_id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/forgotPassword": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "Coach forgot password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_role",
                        "in": "formData",
                        "description": " super_admin=> 1, sub_admin=> 2, employee=> 3,employer=> 4,coach=> 5",
                        "required": true,
                        "type": "number",
                        "enum": [
                            5
                        ]
                    },
                    {
                        "name": "app_id",
                        "in": "formData",
                        "description": "app_id",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/resetPassword": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "Coach reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/updateEmployerDeviceToken": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "Api to update coach device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "formData",
                        "description": "enter device token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/clearEmployerDeviceToken": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "Api to clear coach device token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getProfile": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "Coach get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/editProfile": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "Coach edit profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter any jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "country code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "description": "phone number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/uploadFile": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "upload media files for coach",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "folderName",
                        "in": "formData",
                        "description": "folderName",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "coach_profile_pic",
                            "other"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getNotifications": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "api to get notifiactions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getUnseenNotificationCount": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "api to get Unseen Notification Count",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/markNotificationsAsViewed": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "api to get notifiactions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "chat",
                            "chat_message_only"
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "chat room id (required only in case of chat_message_only type)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/addEditSlot": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "api to add/edit slots",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. Date format should be: YYYY-MM-DD\n2. Time format should be: HH:mm:ss\n3. Type can be: 1=>does_not_repeat, 2=>daily, 3=>weekly, 4=>every_week_day, 5=>custom\n4. Day is required if type is 3 (must be array)\n\tDay can be : 0=>sunday 1=>monday, 2=>tuesday, 3=>wednesday, 4=>thursday, 5=>friday, 6=>saturday\n5. custom_dates is required if type is 5\n6. Required fields are:\n\ttimings\n\ttime_capture_type\n\tdate\n\tstart_time\n\tend_time\n\ttype\n\ttime_capture_type:1=>available previewed slots, 2=>unavailable previewed slots, 3=>submit previewed slots with available and unavailable slots\n\tis_update:true is required if you want to update existing slots",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "number"
                                },
                                "session_duration": {
                                    "type": "number"
                                },
                                "time_capture_type": {
                                    "type": "number"
                                },
                                "day": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "is_update": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "custom_date": {
                                    "type": "string"
                                },
                                "timings": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start_time": {
                                                "type": "string"
                                            },
                                            "end_time": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "custom_dates": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getSlots": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "api to get slots",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter_key",
                        "in": "query",
                        "description": "filter_key",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Daily",
                            "Weekly",
                            "Monthly",
                            "Yearly"
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Enter date format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "day",
                        "in": "query",
                        "description": "Enter day",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "13",
                            "14",
                            "15",
                            "16",
                            "17",
                            "18",
                            "19",
                            "20",
                            "21",
                            "22",
                            "23",
                            "24",
                            "25",
                            "26",
                            "27",
                            "28",
                            "29",
                            "30",
                            "31"
                        ]
                    },
                    {
                        "name": "week",
                        "in": "query",
                        "description": "Enter week",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "13",
                            "14",
                            "15",
                            "16",
                            "17",
                            "18",
                            "19",
                            "20",
                            "21",
                            "22",
                            "23",
                            "24",
                            "25",
                            "26",
                            "27",
                            "28",
                            "29",
                            "30",
                            "31",
                            "32",
                            "33",
                            "34",
                            "35",
                            "36",
                            "37",
                            "38",
                            "39",
                            "40",
                            "41",
                            "42",
                            "43",
                            "44",
                            "45",
                            "46",
                            "47",
                            "48",
                            "49",
                            "50",
                            "51",
                            "52"
                        ]
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Enter month",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12"
                        ]
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Enter year",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "2020",
                            "2021",
                            "2023",
                            "2024",
                            "2025",
                            "2026",
                            "2027",
                            "2028",
                            "2029",
                            "2030"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getSlot": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "api to get slot",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slot_id",
                        "in": "query",
                        "description": "slot id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/deleteSlot": {
            "delete": {
                "tags": [
                    "Coach"
                ],
                "description": "api to delete slot",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "enter type: 1=> individual, 2=> group",
                        "required": true,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "group_type",
                        "in": "formData",
                        "description": "enter type: 1=> date, 2=> time",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "slot_id",
                        "in": "formData",
                        "description": "Slot id is required if type is 1",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "slot_date_group_id",
                        "in": "formData",
                        "description": "Slot date group id is required if group type is 1",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slot_time_group_id",
                        "in": "formData",
                        "description": "Slot time group id is required if group type is 2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "current_date",
                        "in": "formData",
                        "description": "current date is required if type is 2 (YYYY-MM-DD)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getSessionRequests": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "to get Session Requests",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/acceptSessionRequest": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "to accept Session Requests",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "timezone",
                        "in": "formData",
                        "description": "eg: America/New_York, Asia/calcutta etc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/rejectSessionRequest": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "to reject Session Requests",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getAcceptedSessions": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "to get accepted Sessions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/cancelSession": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "to cancel Session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "cancel_reason",
                        "in": "formData",
                        "description": "enter cancel reason",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "formData",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/listSessionHistory": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "to list Session History",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "eg: YYYY-MM-DD HH:mm:ss",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "Default is 1.\n\t1=>yes,\n\t2=>no",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size (required if is_pagination is 1)",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getSessionHistoryDetails/{session_id}": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "to get Session History Details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/updateZoomMeetingDuration": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "to update Zoom Meeting Duration",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/endZoomMeeting": {
            "put": {
                "tags": [
                    "Coach"
                ],
                "description": "to end Zoom Meeting",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "enter session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getChatList": {
            "get": {
                "tags": [
                    "CoachChat"
                ],
                "description": "get chat list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/createChatSession": {
            "post": {
                "tags": [
                    "CoachChat"
                ],
                "description": "create chat session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/dropChatSession": {
            "delete": {
                "tags": [
                    "CoachChat"
                ],
                "description": "drop chat session",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/checkChatSession/{chat_room_id}": {
            "get": {
                "tags": [
                    "CoachChat"
                ],
                "description": "check chat session exist or not",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "path",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getChatSessionIdandToken/{chat_room_id}": {
            "get": {
                "tags": [
                    "CoachChat"
                ],
                "description": "get video chat session id and token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "path",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/sendChatNotification": {
            "post": {
                "tags": [
                    "CoachChat"
                ],
                "description": "send chat notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_type",
                        "in": "formData",
                        "description": "text | audio | video",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "text",
                            "audio",
                            "video"
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "Enter chat session id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "Enter chat token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Enter message in case of text chat",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/sendChatDisconnectNotification": {
            "post": {
                "tags": [
                    "CoachChat"
                ],
                "description": "send chat disconnect notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_type",
                        "in": "formData",
                        "description": "audio | video",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "audio",
                            "video"
                        ]
                    },
                    {
                        "name": "disconnect_type",
                        "in": "formData",
                        "description": "1=> disconnected | 2=>missed",
                        "required": false,
                        "type": "string",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "formData",
                        "description": "Enter chat session id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "Enter chat token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/clearChat": {
            "delete": {
                "tags": [
                    "CoachChat"
                ],
                "description": "clear chat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/web/getCoaches": {
            "get": {
                "tags": [
                    "Web"
                ],
                "description": "api to get all coaches",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [],
                "responses": {}
            }
        },
        "/web/getAdvisors": {
            "get": {
                "tags": [
                    "Web"
                ],
                "description": "api to get all advisors",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [],
                "responses": {}
            }
        },
        "/web/getArticles": {
            "get": {
                "tags": [
                    "Web"
                ],
                "description": "api to get all articles",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [],
                "responses": {}
            }
        },
        "/web/getSubscriptions": {
            "get": {
                "tags": [
                    "Web"
                ],
                "description": "api to get all Subscription plans",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [],
                "responses": {}
            }
        },
        "/bluetango-admin/login": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/addAdmin": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Add admin",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "{admins:[{name:'string',email:'@gmail.com'}],role_name:'string',module_wise_permissions:[{module:[],permissions:[1=>add, 2=> updated, 3=> view, 4=> delete]}]}",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/forgotPassword": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin forget password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/resetPassword": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin reset password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/uploadFile": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Employee get profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "folderName",
                        "in": "formData",
                        "description": "folderName",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "bluetango_admin_profile_pic"
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/logout": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to get admin logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getProfile": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin get Profile",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/updateProfile": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin update Profile",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. Required Fields are:\n\tname,\n\temail",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "profile_pic_url": {
                                    "type": "string"
                                },
                                "social_media_handles": {
                                    "type": "object",
                                    "properties": {
                                        "facebook": {
                                            "type": "string"
                                        },
                                        "twitter": {
                                            "type": "string"
                                        },
                                        "linkedin": {
                                            "type": "string"
                                        },
                                        "instagram": {
                                            "type": "string"
                                        },
                                        "google": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/changePassword": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Admin change Password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "old_password",
                        "in": "formData",
                        "description": "new password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "new_password",
                        "in": "formData",
                        "description": "new password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/dashboard": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to get dashboard",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search key: coach name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getCoachList": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to view the coach list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search employer by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coach_specialization_category_id",
                        "in": "query",
                        "description": "coach specialization category id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "employee_rank_id",
                        "in": "query",
                        "description": "employee rank id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "0=>inactive 1=>active",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "coach rating: 1,2,3,4,5",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/addCoach": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to add coach",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. When you will pass id then it will be update otherwise it will be create\n2. Required Fields are:\n\tname,\n\temail,\n\tcountry_code,\n\tphone_number,\n\tdescription, and coach_charge is required\n3. Multiple coach specialization category ids can be added in coach_specialization_category_ids array like: prev_employers:[1,2,3,...]\n4. Multiple employee rank ids can be added in employee_rank_ids array like: prev_employers:[1,2,3,...]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "string"
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "coach_specialization_category_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "employee_rank_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "coach_charge": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/editCoach": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to edit coach",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. When you will pass id then it will be update otherwise it will be create\n2. Required Fields are:\n\tcoach_id,\n\tname,\n\temail,\n\tcountry_code,\n\tphone_number,\n\tdescription, and coach_charge is required\n3. Multiple coach specialization category ids can be added in coach_specialization_category_ids array like: prev_employers:[1,2,3,...]\n4. Multiple employee rank ids can be added in employee_rank_ids array like: prev_employers:[1,2,3,...]",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "coach_id": {
                                    "type": "number"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "string"
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "coach_specialization_category_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "employee_rank_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "coach_charge": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getCoachDetails": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to get coach details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coach_id",
                        "in": "query",
                        "description": "coach id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/deleteCoach/{coach_id}": {
            "delete": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to delete Coach",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coach_id",
                        "in": "path",
                        "description": "coach id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/blockUnblockCoach": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to block Unblock Coach",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coach_id",
                        "in": "formData",
                        "description": "coach id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "0=>inactive 1=>active",
                        "required": true,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/listEmployeeRanks": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to list Employee Ranks",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "is_pagination: 0=> no, 1=> yes",
                        "required": false,
                        "type": "number",
                        "default": 1,
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/listCoachSpecializationCategories": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Api to list Coach Specialization Categories",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "is_pagination: 0=> no, 1=> yes",
                        "required": false,
                        "type": "number",
                        "default": 1,
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getChatRoomId": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "get chat room id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "other_user_id",
                        "in": "query",
                        "description": "other_user_id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getChatList": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "get chat list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_pagination",
                        "in": "query",
                        "description": "is_pagination: 0=> no, 1=> yes",
                        "required": false,
                        "type": "number",
                        "default": 1,
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/sendChatNotification": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "send chat notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chat_room_id",
                        "in": "formData",
                        "description": "Enter chat room id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Enter message in case of text chat",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/addBios": {
            "post": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "add bios",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coach_id",
                        "in": "formData",
                        "description": "coach_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/updateBios": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "update bios",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "bio id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "file name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/deleteBios/{id}": {
            "delete": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "delete bios",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getBios": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "get bios",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/addStaticContent": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "add Static Content",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pricing",
                        "in": "formData",
                        "description": "pricing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_us",
                        "in": "formData",
                        "description": "contact_us",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "about_us",
                        "in": "formData",
                        "description": "about_us",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "privacy_policy",
                        "in": "formData",
                        "description": "privacy_policy",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terms_ondition",
                        "in": "formData",
                        "description": "terms_ondition",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getStaticContent": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "get Static Content",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "description": "contentType(pricing,contact_us,about_us,privacy_policy,terms_ondition)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getSessionList": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to view the Session List (completed session and pending session)",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "1=>pending, 2=>accepted, 3=>rejected, 4=> cancelled, 5=>completed",
                        "required": false,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "1=> free, 2=> paid",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "team_level_Id",
                        "in": "query",
                        "description": "team_level_Id",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getSessionDetail": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to view the Session Detail (completed session and pending session)",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "session id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/performAction": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to perform action on pending sessions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "slot_id",
                        "in": "formData",
                        "description": "slot id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "coach_id",
                        "in": "formData",
                        "description": "Enter coach id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "date",
                        "in": "formData",
                        "description": "Enter date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "formData",
                        "description": "1=>pending, 2=>declined, 3=>expired, 4=> reassigned, 5=>accepted",
                        "required": true,
                        "type": "number",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "start_time",
                        "in": "formData",
                        "description": "start_time format: HH:mm:ss",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_time",
                        "in": "formData",
                        "description": "end_time format: HH:mm:ss",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getAvailabileCoaches": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to view Availabile Coaches Slots",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "session id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/deleteAdmin/{admin_id}": {
            "delete": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to delete Admin",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "admin_id",
                        "in": "path",
                        "description": "admin_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/viewRoleDetails": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to get  role details along with admin details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role_id",
                        "in": "query",
                        "description": "role_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/deleteRole/{role_id}": {
            "delete": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "api to delete Role",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "role_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/updateAdminAndRole": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "Update admin",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "{admins:[{id:'number',name:'string',email:'@gmail.com'}],id:'number',role_name:'string',module_wise_permissions:[{module:[],permissions:[1=>add, 2=> updated, 3=> view, 4=> delete]}]}",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/updateAdminAndRoleStatus": {
            "put": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "update Admin And Role Status",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formDate",
                        "description": "0--> inactive/ 1--> active",
                        "required": true,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "id",
                        "in": "formDate",
                        "description": "role_id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getrolesAndAdmins": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "update Admin And Role Status",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "0--> inactive/ 1--> active",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "module",
                        "in": "query",
                        "description": "'Dashboard', 'Coach Administration', 'Administration Management', 'Static Content', 'Session Content'",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Dashboard", "Coach Administration", "Administration Management", "Static Content", "Session Content"
                        ]
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "enter the search key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getStaticContent": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "get Static Content",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "description": "contentType(pricing,contact_us,about_us,privacy_policy,terms_ondition)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getBios": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "get bluetango coach bios",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "page size",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getUnseenChatNotificationCount": {
            "get": {
                "tags": [
                    "Coach"
                ],
                "description": "get Unseen Chat Notification Count",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/getChatRoomId": {
            "get": {
                "tags": [
                    "CoachChat"
                ],
                "description": "get chat room id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "other_user_id",
                        "in": "query",
                        "description": "other_user_id",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "0=> employee,1=> BT_admin",
                        "required": false,
                        "type": "number",
                        "enum": [
                            0,
                            1
                        ]
                    }
                ],
                "responses": {}
            }
        },
        "/bluetango-admin/getBiosDetails": {
            "get": {
                "tags": [
                    "Bluetango Admin"
                ],
                "description": "get bio details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "bios id",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {}
            }
        },
        "/coach/updateSlotAvailability": {
            "post": {
                "tags": [
                    "Coach"
                ],
                "description": "api to update Slot Availability",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "1. Date format should be: YYYY-MM-DD\n\t is_available is required 1<= for available,4<= for unavailable\n\tevent_type is requires 0<= for current data 1<= for following days\n\ttimings is required",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string"
                                },
                                "is_available": {
                                    "type": "number"
                                },
                                "event_type": {
                                    "type": "number"
                                },
                                "timings": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start_time": {
                                                "type": "string"
                                            },
                                            "end_time": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admin/uploadThoughts": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to upload thoughts",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "thoughts",
                        "in": "formData",
                        "description": "thoughts",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {}
            }
        },
        "/admin/downloadThoughts": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Api to download thoughts",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        },
        "/employee/getThought": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "description": "Api to get thought",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter jwt token for authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "current date (Wed Feb 09 2022 17:38:17 GMT+0530 (India Standard Time))",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {}
}
